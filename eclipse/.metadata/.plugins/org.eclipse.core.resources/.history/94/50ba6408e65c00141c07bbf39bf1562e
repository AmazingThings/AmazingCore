package com.amazingthings.core.render;

import org.lwjgl.opengl.GL11;

import com.amazingthings.core.model.ModelFilter;

import cpw.mods.fml.client.FMLClientHandler;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.RenderBlocks;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.entity.Entity;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.IItemRenderer;

public class IItemRendererFilter implements IItemRenderer {

	protected ModelFilter model;

	public IItemRendererFilter(){
		model = new ModelFilter();
	}

	private void render(Entity render, ItemStack item, float translateX, float translateY, float translateZ, int renderType)
	{	
		GL11.glPushMatrix();
		GL11.glTranslatef(translateX, translateY, translateZ);
		Minecraft.getMinecraft().renderEngine.bindTexture(new ResourceLocation("atcore:textures/model/Filter.png"));
		GL11.glPushMatrix();
		GL11.glRotatef(180F, 0.0F, 0.0F, 1.0F);
		model.render(render, 0F, 0f, 0f, 0f, 0f, 0.0625f);
		GL11.glPopMatrix();
		GL11.glPopMatrix();
	}

	@Override
	public boolean handleRenderType(ItemStack item, ItemRenderType type) {
		switch(type){
		case ENTITY: return true;
		case EQUIPPED_FIRST_PERSON: return true;
		case EQUIPPED: return true;
		case INVENTORY: return true;
		default: return false;
		}
	}

	@Override
	public boolean shouldUseRenderHelper(ItemRenderType type, ItemStack item,
			ItemRendererHelper helper) {
		return false;
	}

	@Override
	public void renderItem(ItemRenderType type, ItemStack item, Object... data) {
		switch (type)
		{
		case ENTITY:
			render((Entity) data[0], item, -0.5f, -0.5f, -0.5f, 0);
			break;
		case EQUIPPED:
			render((Entity) data[0], item, -0.4f, 0.50f, 0.35f, 1);
			break;
		case EQUIPPED_FIRST_PERSON:
			render((Entity) data[0], item, -0.4f, 0.50f, 0.35f, 2);
			break;
		case INVENTORY:
			render((Entity) data[0], item, -0.5f, -0.5f, -0.5f, 3);
			break;
		default:
		}
	}
}
