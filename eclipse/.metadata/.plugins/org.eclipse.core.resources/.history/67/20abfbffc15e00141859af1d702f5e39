package com.amazingthings.core.tileentity;

import com.amazingthings.core.AmazingCore;
import com.amazingthings.core.items.Items;

import net.minecraft.block.Block;
import net.minecraft.block.BlockChest;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.init.Blocks;
import net.minecraft.inventory.IInventory;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntityChest;

public class TileEntityVessel extends TileEntity {

	public int amount;
	public int burnTime;
	public int fuelTime;
	public Item Smelting;
	
	public TileEntityVessel() {
		
	}
	
	public void readFromNBT(NBTTagCompound tag) {
		super.readFromNBT(tag);

        amount = tag.getInteger("amount");
        burnTime = tag.getInteger("burnTime");
        fuelTime = tag.getInteger("fuelTime");
	}
	
	public void writeToNBT(NBTTagCompound tag) {
		super.writeToNBT(tag);
		
		tag.setInteger("amount", amount);
		tag.setInteger("burnTime", burnTime);
		tag.setInteger("fuelTime", fuelTime);

	}
	
	public void updateEntity() {
		boolean isBurning = fuelTime > 0;
		boolean sendUpdate = false;
		
		if(fuelTime > 0) {
			fuelTime--;
		}
		if(!worldObj.isRemote) {
			if(fuelTime == 0 && this.canSmelt()) {
				if(fuelTime > 0) {
					sendUpdate = true;
					
				}
			}
		}
		if(fuelTime > 0 && canSmelt()) {
			burnTime++;
			
			if(burnTime == 200) {
				burnTime = 0;
				smeltItem();
			}
		} 
	}
	
	private void smeltItem() {
		TileEntityChest chest = (TileEntityChest) worldObj.getTileEntity(xCoord, yCoord+1, zCoord);
		IInventory inv = (IInventory) chest;
		Item item = Items.ingotAluminium;
		EntityItem entity = new EntityItem(worldObj, xCoord, yCoord, zCoord, new ItemStack(item));
		
		if(worldObj.getTileEntity(xCoord, yCoord, zCoord).equals(chest)) {
			for(int i = 0; i < chest.getSizeInventory(); i++) {
				if(inv.isItemValidForSlot(i, new ItemStack(item))) {
					inv.getStackInSlot(i).stackSize++;
					amount--;
			
				}else {
					worldObj.spawnEntityInWorld(entity);
					amount--;
				}
			}
		}
	}

	public boolean canSmelt() {
		if(amount > 0 ) {
			return true;
		}else {
			return false;
		}
	}
}
