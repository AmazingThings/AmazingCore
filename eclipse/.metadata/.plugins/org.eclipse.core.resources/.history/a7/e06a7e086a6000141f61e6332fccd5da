package com.amazingthings.core.recipes;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;

import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemFishFood;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.FurnaceRecipes;

public class VesselRecipes {
    private static final VesselRecipes smeltingBase = new VesselRecipes();
    /** The list of smelting results. */
    private Map smeltingList = new HashMap();
    private Map degreesList = new HashMap();
    private static final String __OBFID = "CL_00000085";

    /**
     * Used to call methods addSmelting and getSmeltingResult.
     */
    public static VesselRecipes smelting()
    {
        return smeltingBase;
    }

    private VesselRecipes()
    {
        
    }

    public void addBlocktoList(Block p_151393_1_, ItemStack p_151393_2_, float p_151393_3_)
    {
        this.addItemtoList(Item.getItemFromBlock(p_151393_1_), p_151393_2_, p_151393_3_);
    }

    public void addItemtoList(Item p_151396_1_, ItemStack p_151396_2_, float p_151396_3_)
    {
        this.addItemStacktoList(new ItemStack(p_151396_1_, 1, 32767), p_151396_2_, p_151396_3_);
    }

    public void addItemStacktoList(ItemStack p_151394_1_, ItemStack p_151394_2_, float degrees)
    {
        this.smeltingList.put(p_151394_1_, p_151394_2_);
    }

    /**
     * Returns the smelting result of an item.
     */
    public ItemStack getSmeltingResult(ItemStack p_151395_1_)
    {
        Iterator iterator = this.smeltingList.entrySet().iterator();
        Entry entry;

        do
        {
            if (!iterator.hasNext())
            {
                return null;
            }

            entry = (Entry)iterator.next();
        }
        while (!this.checkIsTheSame(p_151395_1_, (ItemStack)entry.getKey()));

        return (ItemStack)entry.getValue();
    }
    
    public int getDegrees(ItemStack stack){
    	return 0;
    }

    private boolean checkIsTheSame(ItemStack checking, ItemStack entry)
    {
        return entry.getItem() == checking.getItem() && (entry.getItemDamage() == 32767 || entry.getItemDamage() == checking.getItemDamage());
    }

    public Map getSmeltingList()
    {
        return this.smeltingList;
    }
    
    public Map getDegreesList(){
    	return this.degreesList;
    }
	
}
